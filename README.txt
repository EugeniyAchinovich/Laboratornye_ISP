Лабораторная работа #3

1) Общее описание
	* Программа является службами Windows(Windows Services) для Windows-ПК и требует отдельной установки и запуска вручную.
	* Программа представлена следующими файлами с кодом самой программы и файлами конфигураций(далее - конфиги):
		** Service1.cs   (C#)   - основной файл Windows службы, cодержащий код, в котором определены и запускаются все необходимые для работы методы;
		** Installer1.cs (C#)   - файл класса установщика Windows службы;
		** configs.json  (JSON) - конфиг на языке JSON;
		** configs.xml   (XML)  - конфиг на языке XML;
2) Работа программы
	* После запуска программа работает в фоновом режиме и осуществляет мониторинг папки клиента(SourceFolder) на наличие появившихся файлов;
	* В завистимости от выбранных опций в конфигах, производит соответствующие манипуляции с появившимся файлом из папки клиента (архивация, сжатие, шифрование и т.д);
	
3) Принцип работы программы
	* Программа мониторит директорию с конфигами (в данном случае директорией является Рабочий Стол) на наличие самих конфигов.
		** Распознаются и считываются конфиги с названиями "configs.json" и "configs.xml";
		** Наборы параметров в обоих кофигах идентичны и они имеют следующий вид:
		 - sourceFolder    - путь к папке клиента
		 - targetFolder    - путь к папке, отвечающей за target сторону
		 - archive         - путь к архиву (по умолчанию находится в target папке)
		 - archiveDateOnly - именовать ли субдиректорию внутри директории архива только датой создания клиентского файла. 
			 Если false, то полное имя субдиректории будет содержать дату создания + имя файла.
		 - needToArchive   - нужно ли распаковывать и дешифровывать файлы и помещать их в архив.
		 - needToEncrypt   - нужно ли зашифровывать файлы
		 - cypherKey       - ключ шифрования

	        ** Программа имеет поля, полностью соотвествующие по названию и своей роли вышеприведенным параметрам конфигов. Поля определены в файле Service1.cs.

	* Менеджер внутри программы выбирает, откуда брать параметры следующим образом: 
		** При наличии обоих файлов конфигурации в директории, программа отдаёт предпочтение считыванию файла "configs.json" и игнорирует "configs.xml";
		** При отсутсвии файла "configs.json", но наличии файла "configs.xml", программа считывает файл "configs.xml";
		** При отсутсвии обоих файлов программа использует собственные значения по умолчанию, определённые как поля в файле Service1.cs;

	* Далее конфиги обрабатываются, и полям внутри программы присваиваются значения из соответсвующих конфигов. 
		Если конфигов нет, то программа оставляет поля, заполненными значениями по умолчанию.

	* В зависимости от значений параметров, осуществляются соответствующие операции с файлами.
		** Шифрование является продвинутым и использует AES (Advanced Encrypting Standtart). Ключ также задаёт пользователь.
	* При выключении необходимости архивации и шифрования файлов, программа выполняет свои минимальные действия - передача сжатого в .rar файла на target сторону.